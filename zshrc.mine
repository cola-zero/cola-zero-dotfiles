# PATH setting
# for macport
case "${OSTYPE}" in
darwin10.3.0)
		export PATH=$HOME/opt/sbin:$HOME/opt/bin:$HOME/local/bin:$HOME/.cabal/bin:$PATH
		export PATH=/Applications/Emacs.app/Contents/MacOS:/Applications/Emacs.app/Contents/MacOS/bin:$PATH
		;;
linux-gnu)
		export PATH=$HOME/.cabal/bin:$HOME/linux/opt/ghc-6.12.1/bin:$HOME/linux/local/app/haskell-platform-2010.1.0.0/bin:$GOBIN:$HOME/linux/opt/rurema:$HOME/linux/opt/ruby19/bin:$HOME/linux/opt/rsense-0.2/bin:$HOME/.cabal/bin:$HOME/local/bin:$HOME/linux/local/bin:/sbin:/usr/sbin:/usr/local/sbin:/$HOME/.gem/ruby/1.9.1/bin:/opt/ruby19/lib/ruby/gems/1.9.1:$HOME/.gem/ruby/1.8/bin:$PATH
		export PATH=$HOME/linux/local/app/emacs-23.2/bin:$PATH
		export PATH=$HOME/linux/local/app/ruby18/bin:$PATH
		export PATH=$HOME/linux/local/app/gcc-code-assist-0.1.4.4.4/bin:$PATH
		export PATH=$HOME/linux/local/app/global-5.8.2/bin:$PATH
		export PATH=$HOME/opt/hatena-diary-writer:$PATH
#		export PATH=$HOME/.gem/ruby/1.8/bin:$PATH
		export PATH=$HOME/opt/firefox:$PATH
		export PATH=/var/lib/gems/1.8/bin/:$PATH
		export GOROOT=$HOME/linux/opt/go
		export GOBIN=$GOROOT/bin
		export GOOS=linux
		export GOARCH=amd64
		export PYTHONPATH=/user/arch/koga/linux/local/lib64/python2.4/site-packages
		export LD_LIBRARY_PATH=/user/arch/koga/linux/local/lib:/usr/lib64:/usr/local/bin/Mono/lib
		export GCC_SENSE_HOME=/home/project/vglc/koga
		export TERM=rxvt-256color
		export RSPEC=true
		export EDITOR=emacs
		;;
esac

source ${HOME}/.zsh_aliases

 [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"  # This loads RVM into a shell session.


if [ "$TERM" = "screen-bce" ]; then
	chpwd () { echo -n "_`dirs`\\" }
	preexec() {
		# see [zsh-workers:13180]
		# http://www.zsh.org/mla/workers/2000/msg03993.html
		emulate -L zsh
		local -a cmd; cmd=(${(z)2})
		case $cmd[1] in
			fg)
				if (( $#cmd == 1 )); then
					cmd=(builtin jobs -l %+)
				else
					cmd=(builtin jobs -l $cmd[2])
				fi
				;;
			%*)
				cmd=(builtin jobs -l $cmd[1])
				;;
			cd)
				if (( $#cmd == 2)); then
					cmd[1]=$cmd[2]
				fi
				;;
			*)
				echo -n "k$cmd[1]:t\\"
				return
				;;
		esac

		local -A jt; jt=(${(kv)jobtexts})

		$cmd >>(read num rest
			cmd=(${(z)${(e):-\$jt$num}})
			echo -n "k$cmd[1]:t\\") 2>/dev/null
	}
	chpwd
fi

